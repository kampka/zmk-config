/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  j  |  d  |  u  |  a  |  x  |   |  x  |  h   |  l  |  m  |  w  |  ß   |
// |      |  c  |  t  |  i  |  e  |  o  |   |  b  |  n   |  r  |  s  |  g  |  q   |
// | LCTEL|  f  |  v  |  ü  |  ä  |  ö  |   |  y  |  y   |  ,  |  .  |  k  | RCTRL|
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp J &kp D &kp U    &kp A   &kp X     /**/  &kp P &kp H     &kp L     &kp M   &kp W  &kp MINUS
   &kp LALT  &kp C &kp T &kp I    &kp E   &kp O     /**/  &kp B &kp N     &kp R     &kp S   &kp G  &kp Q
   &kp LCTRL &kp F &kp V &kp LBKT &kp SQT &kp SEMI  /**/  &kp Z &kp Y     &kp COMMA &kp DOT &kp K  &kp RCTRL
                         &none    &mo 1   &mo 2     /**/  &mo 3 &kp SPACE &none
                        >;
                };
                shift_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  J  |  D  |  U  |  A  |  X  |   |  P  |  H  |  L  |  M  |  W  |  €   |
// |      |  C  |  T  |  I  |  E  |  O  |   |  B  |  N  |  R  |  S  |  G  |  Q   |
// |S/LCTL|  F  |  V  |  Ü  |  Ä  |  Ö  |   |  Z  |  Y  |  ,  |  .  |  K  |S/RCTL|
//                    |     |     |     |   |     |     | ALT |
                        bindings = <
   &trans        &kp LS(J) &kp LS(D) &kp LS(U)    &kp LS(A)   &kp LS(X)     /**/  &kp LS(P) &kp LS(H)  &kp LS(L) &kp LS(M) &kp LS(W)  &kp RA(E)
   &trans        &kp LS(C) &kp LS(T) &kp LS(I)    &kp LS(E)   &kp LS(O)     /**/  &kp LS(B) &kp LS(N)  &kp LS(R) &kp LS(S) &kp LS(G)  &kp LS(Q)
   &kp LS(LCTRL) &kp LS(F) &kp LS(V) &kp LS(LBKT) &kp LS(SQT) &kp LS(SEMI)  /**/  &kp LS(Z) &kp LS(Y)  &kp COMMA &kp DOT   &kp LS(K)  &kp RCTRL
                                     &trans       &trans      &trans        /**/  &trans    &trans     &trans
                        >;
                };

                programming_layer {
// -----------------------------------------------------------------------------------------
// |      |  @  |  _  |  [  |  ]  |  ^  |   |  !  |  <  |  >  |  =  |  &  |      |
// |      |  \  |  /  |  {  |  }  |  *  |   |  ?  |  (  |  )  |  -  |  :  |      |
// |      |  #  |  $  |  |  |  ~  |  `  |   |  +  |  %  |  "  |  '  |  ;  |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans &kp RA(Q)     &kp LS(SLASH)    &kp RA(NUMBER_8) &kp RA(NUMBER_9) &kp GRAVE      /**/    &kp LS(NUMBER_1) &kp NUBS         &kp LS(NUBS)     &kp LS(NUMBER_0) &kp LS(NUMBER_6) &none
   &trans &kp RA(MINUS) &kp LS(NUMBER_7) &kp RA(NUMBER_7) &kp RA(NUMBER_0) &kp LS(RBKT)   /**/    &kp LS(MINUS)    &kp LS(NUMBER_8) &kp LS(NUMBER_9) &kp FSLH         &kp LS(DOT)   &none
   &trans &kp NUHS      &kp LS(NUMBER_4) &kp RA(NUBS)     &kp RA(RBKT)     &kp LS(EQUAL)  /**/    &kp RBKT         &kp LS(NUMBER_5) &kp LS(NUMBER_2) &kp LS(NUHS)     &kp LS(COMMA) &none
                                         &none            &none            &none          /**/    &none            &none            &none
                        >;
                };
                
                number_layer {
// -----------------------------------------------------------------------------------------
// |      | PgUp | BSP |  Up  | DEL  | PgDwn |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |      | HOME | LEFT| DOWN | RGHT | ESC   |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// |      | END  |     |      | ENT  | TAB   |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &kp PG_UP &kp BSPC &kp UP    &kp DEL    &kp PG_DN  /**/  &none         &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &none &none
   &trans  &kp HOME  &kp LEFT &kp DOWN  &kp RIGHT  &kp ESC    /**/  &none         &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &none &none
   &trans  &kp END   &none    &none     &kp ENTER  &kp TAB    /**/  &kp NUMBER_0  &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &none &none
                              &none     &none      &none      /**/  &none         &none       &none
                        >;
                };
        };
};
